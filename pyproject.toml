[tool.isort]
profile = "black"  # black-compatible
line_length = 119  # should match black parameters
ignore_whitespace = true  # ignore whitespace for compatibility with the initial style
py_version = 310  # python 3.10 as a target version
known_first_party = ["atommic"]  # FIRSTPARTY section
known_third_party = []  # THIRDPARTY section
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
extend_skip = ["setup.py", "docs/source/conf.py"]

[tool.pylint.'pycodestyle']
max-args = 65
max-line-length = 119
max-branches = 20
max-locals = 65
max-nested-blocks = 10
max-statements = 110

[tool.black]
line_length = 119
skip_string_normalization = true

[tool.pytest.ini_options]
# durations=0 will display all tests execution time, sorted in ascending order starting from from the slowest one.
# -vv will also display tests with durration = 0.00s
addopts = "--verbose --pyargs --durations=0 --strict-markers"  # always add these arguments to pytest
testpaths = ["tests"]
# directories to ignore when discovering tests
norecursedirs = [
    "atommic",
    "external",
    "docs",
    "projects",
    "tools",
    "*.egg",
    ".*",
    "_darcs",
    "build",
    "CVS",
    "dist",
    "venv",
    "{arch}"
]
# markers to select tests, use `pytest --markers` to see all available markers, `pytest -m "<marker>"` to select tests
markers = [
    "unit: marks unit test, i.e. testing a single, well isolated functionality (deselect with '-m \"not unit\"')",
    "integration: marks test checking the elements when integrated into subsystems (deselect with '-m \"not integration\"')",
    "system: marks test working at the highest integration level (deselect with '-m \"not system\"')",
    "acceptance: marks test checking whether the developed product/model passes the user defined acceptance criteria (deselect with '-m \"not acceptance\"')",
    "docs: mark tests related to documentation (deselect with '-m \"not docs\"')",
    "skipduringci: marks tests that are skipped ci as they are addressed by Jenkins jobs but should be run to test user setups",
    "pleasefixme: marks tests that are broken and need fixing",
    "run_only_on: marks tests that should only be run on a specific platform",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310
skip_missing_interpreters=true
[gh-actions]
python =
    3.10: py310
[testenv]
deps = pytest
extras = dev
allowlist_externals = sh
commands=
     sh -c "pytest --ignore=projects"
"""
